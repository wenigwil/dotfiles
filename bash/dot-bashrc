#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

HISTCONTROL=ignoreboth
shopt -s histappend

HISTSIZE=1000
HISTFILESIZE=2000

# Small function for copying codeheadings to clipboard
codeheading()
{
    # $1 is either "small" or "big"
    # $2 is the comment leader
    # $3 is the heading text
    if [[ $1 == "small" ]]; then
        codeheadingfont="smslant"
        chspaces='    '
    elif [[ $1 == "big" ]]; then
        codeheadingfont="standard"
        chspaces=' '
    else
        echo "CODEHEADING ERROR: First argument has be either small or big"
        return
    fi
    figlet -k -f "$codeheadingfont" "$3" | sed "s/^/${2}${chspaces}/" | xclip -selection "clipboard"
    echo "CODEHEADING: Copied the heading to clipboard"
}

bc_smaller()
{
    if (($(echo "$1 < $2" | bc) == 1)); then
        echo 1
    else
        echo 0
    fi
}

bc_bigger()
{
    if (($(echo "$1 > $2" | bc) == 1)); then
        echo 1
    else
        echo 0
    fi
}

check_gitrepo()
{
    gitcheck=$(git rev-parse --is-inside-work-tree 2> /dev/null)
    if [ "$gitcheck" == "true" ]; then
        echo 1
    else
        echo 0
    fi
}

# Time difference between last commit
commit_tdiff()
{
    if (($(check_gitrepo) == 0)); then
        echo "???"
        return
    fi
    # Get the time of the last commit as unix-timestamp
    commit_time=$(git show -s --format=%ct HEAD)
    # echo "COMMIT TIME $commit_time"
    #
    # Get the current time in unix-timestamp
    now_time=$(date -d now +%s)
    # echo "NOW TIME $now_time"
    #
    # Calculate the difference of the two times
    # BUT rearrange the origin such that everyting is
    # measured against the first year after 1970 where
    # Jan 1 was a Monday
    tdiff=$((now_time - commit_time))

    minutes_calc=$(echo "scale=6; $tdiff/60" | bc)
    minutes=$(echo "scale=0; $tdiff/60" | bc)
    hours_calc=$(echo "scale=6; $minutes_calc/60" | bc)
    hours=$(echo "scale=1; $minutes/60" | bc)
    days_calc=$(echo "scale=6; $hours_calc/24" | bc)
    days=$(echo "scale=1; $hours/24" | bc)
    months=$(echo "scale=0; $days_calc/31" | bc)
    weeks=$(echo "scale=1; $days_calc/7" | bc)
    years=$(echo "scale=1; $days_calc/365" | bc)

    if (($(bc_smaller "$minutes" "1") == 1)); then
        echo "${tdiff}s"
        return
    fi

    if (($(bc_smaller "$hours" "2") == 1)); then
        echo "${minutes}min"
        return
    fi

    if (($(bc_smaller "$days" "4") == 1)); then
        echo "${hours}h"
        return
    fi

    if (($(bc_smaller "$months" "1") == 1)); then
        echo "${days}d"
        return
    fi
    if (($(bc_smaller "$months" "3") == 1)); then
        echo "${weeks}w"
        return
    fi
    if (($(bc_smaller "$years" "1.08") == 1)); then
        echo "${months}m"
        return
    fi
    if (($(bc_bigger "$years" "1.08") == 1)); then
        echo "${years}y"
        return
    fi
}

branch_name()
{
    git rev-parse --abbrev-ref HEAD 2> /dev/null
}

alias pclip='xclip -out -selection "clipboard"'
alias cclip='xclip -selection "clipboard"'
alias ll='ls --group-directories-first --no-group --human-readable -Ag'
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias nexclosyn='nextcloudcmd --non-interactive -u wenigwil -p $(pass cloud/cloud.wenigwil.com) $HOME/wumbo https://cloud.wenigwil.com/'
alias chsmalltex='codeheading "small" "%"'
alias chbigtex='codeheading "big" "%"'

CYAF="\[$(tput setaf 6)\]"
WHIF="\[$(tput setaf 7)\]"
BLUF="\[$(tput setaf 4)\]"
YELF="\[$(tput setaf 3)\]"
MAGF="\[$(tput setaf 5)\]"
RES="\[$(tput setaf sgr0)\]"
BOL="\[$(tput setaf bold)\]"
PS1="${BOL}${MAGF}\u${WHIF}@${YELF}\h${WHIF}:${BLUF}\W${RES}${CYAF}\$${RES} "

# Adding TeX related things to the path
export INFOPATH="/usr/local/texlive/2025/texmf-dist/doc/info":$INFOPATH
export MANPATH="/usr/local/texlive/2025/texmf-dist/doc/man":$MANPATH
export PATH="/usr/local/texlive/2025/bin/x86_64-linux":$PATH

export PDFVIEWER='zathura'
